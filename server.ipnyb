{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "HOST IP: 192.168.56.1\n",
      "Listening at: ('192.168.56.1', 9999)\n",
      "Connected to: ('192.168.56.1', 51127)\n"
     ]
    }
   ],
   "source": [
    "import socket, cv2, pickle,struct\n",
    "# Socket Create\n",
    "server_socket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n",
    "host_name  = socket.gethostname()\n",
    "host_ip = socket.gethostbyname(host_name)\n",
    "print('HOST IP:',host_ip)\n",
    "port = 9999\n",
    "socket_address = (host_ip,port)\n",
    "# Socket Bind\n",
    "server_socket.bind(socket_address)\n",
    "# Socket Listen\n",
    "server_socket.listen(1)\n",
    "print(\"Listening at:\",socket_address)\n",
    "# Socket Accept\n",
    "while True:\n",
    " client_socket,addr = server_socket.accept()\n",
    " print('Connected to:',addr)\n",
    " if client_socket:\n",
    "  vid = cv2.VideoCapture(0)\n",
    "  \n",
    "  while(vid.isOpened()):\n",
    "   ret,image = vid.read()\n",
    "   img_serialize = pickle.dumps(image)\n",
    "   message = struct.pack(\"Q\",len(img_serialize))+img_serialize\n",
    "   client_socket.sendall(message)\n",
    "   \n",
    "   cv2.imshow('Video from Server',image)\n",
    "   key = cv2.waitKey(10) \n",
    "   if key ==13:\n",
    "    client_socket.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
